document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Development\\Mestrado\\TesteSoftware\\Unifesp-MestradoTesteSoftware\\S7-Teste-Mutacao\\src\\odd-even-kata.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":18},"start":{"column":49,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"2","location":{"end":{"column":45,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1","location":{"end":{"column":45,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"8","location":{"end":{"column":45,"line":16},"start":{"column":30,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"10","location":{"end":{"column":43,"line":16},"start":{"column":40,"line":16}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"9","location":{"end":{"column":45,"line":16},"start":{"column":30,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"11","location":{"end":{"column":37,"line":16},"start":{"column":36,"line":16}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Killed"},{"id":"6","location":{"end":{"column":24,"line":16},"start":{"column":23,"line":16}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"14","location":{"end":{"column":2,"line":23},"start":{"column":48,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"12","location":{"end":{"column":53,"line":16},"start":{"column":49,"line":16}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"13","location":{"end":{"column":61,"line":16},"start":{"column":56,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"15","location":{"end":{"column":45,"line":21},"start":{"column":16,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"16","location":{"end":{"column":45,"line":21},"start":{"column":16,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"3","location":{"end":{"column":29,"line":16},"start":{"column":27,"line":16}},"mutatorName":"LogicalOperator","replacement":"||","status":"Timeout"},{"id":"17","location":{"end":{"column":29,"line":21},"start":{"column":27,"line":21}},"mutatorName":"LogicalOperator","replacement":"||","status":"Killed"},{"id":"18","location":{"end":{"column":26,"line":21},"start":{"column":16,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"4","location":{"end":{"column":26,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"19","location":{"end":{"column":26,"line":21},"start":{"column":16,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"7","location":{"end":{"column":24,"line":16},"start":{"column":23,"line":16}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"21","location":{"end":{"column":24,"line":21},"start":{"column":22,"line":21}},"mutatorName":"EqualityOperator","replacement":">","status":"Killed"},{"id":"5","location":{"end":{"column":26,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"22","location":{"end":{"column":45,"line":21},"start":{"column":30,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"28","location":{"end":{"column":2,"line":29},"start":{"column":50,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"24","location":{"end":{"column":43,"line":21},"start":{"column":40,"line":21}},"mutatorName":"EqualityOperator","replacement":"===","status":"Killed"},{"id":"25","location":{"end":{"column":37,"line":21},"start":{"column":36,"line":21}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Killed"},{"id":"26","location":{"end":{"column":53,"line":21},"start":{"column":49,"line":21}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"29","location":{"end":{"column":46,"line":26},"start":{"column":40,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"30","location":{"end":{"column":44,"line":26},"start":{"column":42,"line":26}},"mutatorName":"EqualityOperator","replacement":"<","status":"Killed"},{"id":"32","location":{"end":{"column":51,"line":26},"start":{"column":48,"line":26}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed"},{"id":"33","location":{"end":{"column":23,"line":27},"start":{"column":8,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"34","location":{"end":{"column":23,"line":27},"start":{"column":8,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"35","location":{"end":{"column":21,"line":27},"start":{"column":18,"line":27}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"},{"id":"36","location":{"end":{"column":15,"line":27},"start":{"column":14,"line":27}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Killed"},{"id":"37","location":{"end":{"column":37,"line":27},"start":{"column":32,"line":27}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"38","location":{"end":{"column":19,"line":28},"start":{"column":10,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"39","location":{"end":{"column":19,"line":28},"start":{"column":10,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"42","location":{"end":{"column":2,"line":44},"start":{"column":85,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"40","location":{"end":{"column":17,"line":28},"start":{"column":16,"line":28}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Killed"},{"id":"20","location":{"end":{"column":24,"line":21},"start":{"column":22,"line":21}},"mutatorName":"EqualityOperator","replacement":"<","status":"Killed"},{"id":"23","location":{"end":{"column":45,"line":21},"start":{"column":30,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"41","location":{"end":{"column":17,"line":28},"start":{"column":16,"line":28}},"mutatorName":"EqualityOperator","replacement":">=","status":"Killed"},{"id":"43","location":{"end":{"column":39,"line":32},"start":{"column":37,"line":32}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"44","location":{"end":{"column":33,"line":34},"start":{"column":22,"line":34}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"45","location":{"end":{"column":26,"line":34},"start":{"column":24,"line":34}},"mutatorName":"EqualityOperator","replacement":"<","status":"Killed"},{"id":"46","location":{"end":{"column":26,"line":34},"start":{"column":24,"line":34}},"mutatorName":"EqualityOperator","replacement":">","status":"Killed"},{"id":"27","location":{"end":{"column":61,"line":21},"start":{"column":56,"line":21}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"48","location":{"end":{"column":17,"line":35},"start":{"column":8,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"49","location":{"end":{"column":17,"line":35},"start":{"column":8,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"50","location":{"end":{"column":25,"line":36},"start":{"column":19,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"51","location":{"end":{"column":23,"line":37},"start":{"column":13,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"52","location":{"end":{"column":23,"line":37},"start":{"column":13,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"53","location":{"end":{"column":21,"line":39},"start":{"column":13,"line":39}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"54","location":{"end":{"column":21,"line":39},"start":{"column":13,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"55","location":{"end":{"column":24,"line":40},"start":{"column":19,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"56","location":{"end":{"column":25,"line":42},"start":{"column":19,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"31","location":{"end":{"column":44,"line":26},"start":{"column":42,"line":26}},"mutatorName":"EqualityOperator","replacement":">","status":"Timeout"},{"id":"47","location":{"end":{"column":38,"line":34},"start":{"column":35,"line":34}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Timeout"}],"source":"// ####### The OddEven Kata #######\r\n// Write a program that prints numbers within specified range lets say 1 to 100. \r\n// If number is odd print 'Odd' instead of the number. If number is even \r\n// print 'Even' instead of number. Else print number [hint - if number is Prime].\r\n\r\n// #### Lets divide into following steps: ####\r\n// - Prints numbers from 1 to 100\r\n// - Print \"Even\" instead of number, if the number is even, means divisible by 2\r\n// - Print \"Odd\" instead of number, if the number is odd, means not divisible by 2 \r\n//   but not divisible by itself too [hint - it should not be Prime]\r\n// - Print number, if it does not meet above two conditions, means if number is Prime\r\n// - Make method to accept any number of range [currently  we have 1 to 100]\r\n// - Create a new method to check Odd/Even/Prime of a single supplied method\r\n\r\nexport function isEven (valor: number): boolean {\r\n  let isEven = (valor > 2 && valor % 2 === 0) ? true : false\r\n  return isEven\r\n}\r\n\r\nexport function isOdd (valor: number): boolean {\r\n  let isOdd = (valor >= 1 && valor % 2 !== 0) ? true : false\r\n  return isOdd\r\n}\r\n\r\nexport function isPrime (valor: number): boolean {\r\n  for(let i = 2, s = Math.sqrt(valor); i <= s; i++)\r\n    if(valor % i === 0) return false\r\n  return valor > 1\r\n}\r\n\r\nexport function getOddEvenKata (valor: number, valor2: number): (string | number)[] {\r\n  let values: (string | number)[] = []; \r\n  \r\n  for(let i = valor; i <= valor2; i++)\r\n    if(isEven(i))\r\n      values.push('Even')\r\n    else if(isPrime(i))\r\n      values.push(i)\r\n    else if(isOdd(i))\r\n      values.push('Odd')\r\n    else\r\n      values.push('Erro')\r\n  return values\r\n}\r\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};